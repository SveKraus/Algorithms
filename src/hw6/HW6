1. Merge Sort - сортировка слиянием, массив разделяется пополам, каждый из массивов сортируется рекурсивным алгоритмом
слияния и после соединяем массивы. Каждый разделённый массив делим на подмассивы до тех пор пока там не останется один
элемент.
2.Быстрая сотрировка не требует дополнительной памяти. Сортировка слиянием требует доп. память для хранения временных
 массивов. Алгоритм быстрой сортировки лучше всего справляется с меньшими массивами,для которых его скорость быстрее,
а алгоритм сортировки слиянием хорошо работает со всеми типами массивов с одинаковой для них скоростью. Быстрая сортировка
- использует внутреннюю сортировку, merge sort - внешнюю
3. сортировка слияния используется если требуется устойчивость метода
 4. является устойчивой
 5. Bubble - O(n²)
 Сортировка вставками (Insertion) - O(n²)
Быстрая сортировка -  O(n\log n)
Сортировка слияния - O(n\log n)
6. private void Merge(int[] a, int lo, int hi) {

       if (hi <= lo)
           return;
       int mid = lo + (hi - lo) / 2;
       Merge(a, lo, mid);
       Merge(a, mid + 1, hi);

       int[] buf = Arrays.copyOf(a, a.length);

       for (int k = lo; k <= hi; k++)
           buf[k] = a[k];

       int i = lo, j = mid + 1;
       for (int k = lo; k <= hi; k++) {

           if (i > mid) {
               a[k] = buf[j];
               j++;
           } else if (j > hi) {
               a[k] = buf[i];
               i++;
           } else if (buf[j] < buf[i]) {
               a[k] = buf[j];
               j++;
           } else {
               a[k] = buf[i];
               i++;
           }
       }
   }
